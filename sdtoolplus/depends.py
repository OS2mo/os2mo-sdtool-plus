# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0
from typing import Annotated
from typing import AsyncIterable
from uuid import uuid4

from fastapi import Depends
from fastramqpi.depends import from_user_context
from fastramqpi.ramqp.depends import from_context
from sdclient.client import SDClient as _SDClient
from sqlalchemy import Engine as _Engine
from structlog.contextvars import bound_contextvars

from sdtoolplus.autogenerated_graphql_client import GraphQLClient as _GraphQLClient

from .config import SDToolPlusSettings as _Settings

Settings = Annotated[_Settings, Depends(from_user_context("settings"))]
GraphQLClient = Annotated[_GraphQLClient, Depends(from_context("graphql_client"))]
Engine = Annotated[_Engine, Depends(from_user_context("engine"))]
SDClient = Annotated[_SDClient, Depends(from_user_context("sd_client"))]


async def request_id() -> AsyncIterable[None]:
    req_id = str(uuid4())
    with bound_contextvars(request_id=req_id):
        yield
