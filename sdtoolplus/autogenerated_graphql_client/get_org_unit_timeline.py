# Generated by ariadne-codegen on 2025-02-06 14:57
# Source: queries.graphql
from datetime import datetime
from typing import List
from typing import Optional
from uuid import UUID

from pydantic import Field

from .base_model import BaseModel


class GetOrgUnitTimeline(BaseModel):
    org_units: "GetOrgUnitTimelineOrgUnits"


class GetOrgUnitTimelineOrgUnits(BaseModel):
    objects: List["GetOrgUnitTimelineOrgUnitsObjects"]


class GetOrgUnitTimelineOrgUnitsObjects(BaseModel):
    validities: List["GetOrgUnitTimelineOrgUnitsObjectsValidities"]


class GetOrgUnitTimelineOrgUnitsObjectsValidities(BaseModel):
    validity: "GetOrgUnitTimelineOrgUnitsObjectsValiditiesValidity"
    uuid: UUID
    name: str
    parent: Optional["GetOrgUnitTimelineOrgUnitsObjectsValiditiesParent"]


class GetOrgUnitTimelineOrgUnitsObjectsValiditiesValidity(BaseModel):
    from_: datetime = Field(alias="from")
    to: Optional[datetime]


class GetOrgUnitTimelineOrgUnitsObjectsValiditiesParent(BaseModel):
    uuid: UUID


GetOrgUnitTimeline.update_forward_refs()
GetOrgUnitTimelineOrgUnits.update_forward_refs()
GetOrgUnitTimelineOrgUnitsObjects.update_forward_refs()
GetOrgUnitTimelineOrgUnitsObjectsValidities.update_forward_refs()
GetOrgUnitTimelineOrgUnitsObjectsValiditiesValidity.update_forward_refs()
GetOrgUnitTimelineOrgUnitsObjectsValiditiesParent.update_forward_refs()
