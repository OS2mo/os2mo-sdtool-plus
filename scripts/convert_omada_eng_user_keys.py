# SPDX-FileCopyrightText: Magenta ApS <https://magenta.dk>
# SPDX-License-Identifier: MPL-2.0
import asyncio
from uuid import UUID

import click
from pydantic import BaseModel

from scripts.common import get_gql_client
from sdtoolplus.autogenerated_graphql_client import GraphQLClient
from sdtoolplus.mo.timeline import get_engagement_timeline


class Engagement(BaseModel, frozen=True):
    person: UUID
    user_key: str


async def convert_omada_eng_user_keys(gql_client: GraphQLClient) -> None:
    omada_engagements = await gql_client.get_omada_engagements()

    engagements = set(
        Engagement(
            person=validity.employee_uuid,
            user_key=validity.user_key
        )
        for obj in omada_engagements.objects
        for validity in obj.validities
    )

    for eng in engagements:
        mo_eng_timeline = await get_engagement_timeline(
            gql_client=gql_client,
            person=eng.person,
            user_key=eng.user_key,
        )




@click.command()
def main() -> None:
    gql_client = get_gql_client()

    asyncio.run(convert_omada_eng_user_keys(gql_client))


if __name__ == "__main__":
    main()
